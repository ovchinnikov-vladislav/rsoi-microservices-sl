subprojects {
    apply plugin: 'war'
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'org.springframework.boot'

    bootJar {
        baseName = 'gs-spring-boot'
        version =  '0.1.0'
    }

    repositories {
        jcenter()
    }

    jacocoTestReport {
        reports {
            xml.enabled true
            html.enabled true
            html.destination file("${buildDir}/jacocoHtml")
        }

        afterEvaluate {
            classDirectories = files(classDirectories.files.collect {
                fileTree(dir: it,
                        exclude: ['**/junit/**',
                                  '**/entity/**',
                                  '**/conf/**',
                                  '**/model/**'])
            })
        }
    }

    dependencies {
        implementation('org.springframework.boot:spring-boot-starter-data-jpa')
        implementation('org.springframework.boot:spring-boot-starter-web')
        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix:2.1.3.RELEASE')
        implementation('org.springframework.cloud:spring-cloud-starter-netflix-hystrix-dashboard:2.1.3.RELEASE')
        implementation('org.springframework.boot:spring-boot-starter-actuator')
        implementation('com.h2database:h2')
        implementation('org.postgresql:postgresql')
        implementation('org.apache.httpcomponents:httpclient')
        implementation('org.apache.commons:commons-dbcp2')
        implementation('org.apache.tomcat.embed:tomcat-embed-jasper')
        implementation('io.springfox:springfox-swagger2:2.9.2')
        implementation('io.springfox:springfox-swagger-ui:2.9.2')
        testImplementation('org.springframework:spring-test')
        testImplementation('org.springframework.boot:spring-boot-starter-test')
        testImplementation('junit:junit')
    }
}